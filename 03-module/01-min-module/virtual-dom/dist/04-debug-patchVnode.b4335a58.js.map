{"version":3,"sources":["../src/vnode.ts","../src/is.ts","../src/htmldomapi.ts","../src/h.ts","../src/thunk.ts","../src/snabbdom.ts","src/04-debug-patchVnode.js"],"names":["patch","vnode","app","document","querySelector","oldVnode"],"mappings":";;AMAA;;AAEA,IAAIA,KAAK,GAAG,oBAAK,EAAL,CAAZ,EAEA;;AACA,IAAIC,KAAK,GAAG,iBAAE,KAAF,EAAS,aAAT,CAAZ;AJaA,ADlBO,AGCP,AEKA,ILNa,AKMTC,GAAG,EJYE,ADlBS,CKMRC,ELNW,KAAK,CAAC,AKMT,CAACC,GJYnB,CAAuB,EDlBhB,KCkBP,EAAmC,AIZzB,CAAuB,MAAvB,CAAV;AHNA,ADmBE,AFmBI,AM/BN,IAAIC,KJYK,AFmBO,GM/BJ,EN+BN,CAAgB,AM/BPL,EJYE,CAAC,AFmBZ,EACgB,AMhCF,CAACE,GN+Bf,AM/Bc,ENiCE,AMjCID,KJYjB,AIZW,CJYY,AIZhC,EN+BM,AM7BN,ENgCsB,GEtBb,CAAP,AFmBI,EAIgB,GAJhB,EAI+C;AEtBpD,AEHD,AJ0BE,MAAI,GI1BG,AJ0BA,GAAG,IAAI,II1BhB,CAAqB,AJ0BA,KI1BrB,EAAmC,EJ0BvB,GI1BZ,AJ0BiC,EI1Bc,OJ0BnC,GAAiC,IAAI,CAAC,GAAhD;AGtCF,AFJM,AGiBJ,AJ0BA,AMlCFA,EFQE,GERG,EFQE,CAAC,AERA,CLTQ,AD2CP,EI1BP,GAAY,IHjBR,CAAoB,AGiBP,CHjBb,AGiBc,EHjBY,CGiB9B,EERQ,KAAF,EAAS,gBAAT,CAAR;AJYA,ADpBE,AGiBC,AJyBO,AMjCVD,EFQG,EJyBO,CMjCL,CAACK,CFQE,AJyBK,CIzBJ,CFGA,ADpBA,AD0CI,GIzBV,AJyBM,CIzBmB,CERvB,CFQF,CHjBa,AKSAJ,CLTP,CGiByB,GER7B,CLTiB,AKStB,CFQuC,CFGvC,AEHwC,CFGf,GEHS,CAAyB,CHjBlD,CGiBN,GHjB+B,GCoBlC,EAA+C,EDpBN,CAAP,KAAa,KCoB/C,EAAoE,CDpBlE;ACqBA,ADpBD,AGiBE,AJwBY,EIxBZ,EJwBY,GIxBP,CAAC,AJwBU,CErBV,CFqBU,EIxBhB,CAAyB,CJwBnB,GErBQ,AEHd,CFGe,EEHkB,KAAK,CAAC,IAAN,CAAyB,EFGpD,CAAyB,CEH/B,WFGM,EAAuC,aAAvC,CAAP;AACD,AEHC,AJuBmB,EIvBnB,EJuBmB,GIvBd,CAAC,IAAN,AJuB2B,EAAA,CIvBd,KAAK,CAAC,CJuBZ,GIvBP;AACA,AJsB6B,EItB7B,EJsB6B,GItBxB,CAAC,AJsB2B,EAAA,IAA1B,EItBP,GAAiB,KAAK,CAAC,QAAvB;AFIF,AEHE,AJqBmC,EIrBnC,EJqBmC,GIrB9B,AJqBiC,CIrBhC,CFGC,AFkB+B,GIrBtC,AJqBO,GIrBM,KAAK,CAAC,EFGrB,CAAwB,CEHtB,GFGF,EAAoC;ACnBpC,ADoBE,AEHA,AJoBwC,EIpBxC,EJoBwC,GIpBnC,AJoBsC,CIpBrC,CDjBC,ADoBA,AFiBoC,EIpB3C,GDjBF,ACiBc,CDjBC,EDoBE,CAAC,CCpBlB,ACiBmB,CAAC,CDjBM,ECiBxB,MDjBF,EAAwD,CDoB/C,CAAwB,CCpBjC,EAA+E,CDoBtE,CAAP;ACnBA,ADoBD,AEHA,AJmBQ,EGpCP,CHoCA,GGpCI,CAAC,EAAL,GAAU,4BAAV;AHqCD;AGpCC,ADqBF,AG3BA,ADwBA,MDlBM,GAAG,ADqBA,AEHA,IAAT,CDlBc,ACkBA,KAAd,EAA0B,CFG1B,CAAuB,IAAvB,ECrBM,ADqB6B,ICrBF,QAAQ,KAAK,SAA5C,EAAuD;AACrD,ADqBF,AEHA,MAAM,GDlBC,ADqBA,AEHE,GAAG,CDlBD,CAAC,CHqCC,EGrCE,ADqBA,AEHE,CDlBf,ADqBc,AEHE,EDlBA,CAAC,CCkBnB,EDlBsB,ODqBf,CCrBuB,ADqBA,CCrBC,GDqBxB,CAAP,ECrBE,EAAqC,EAAE,CAAvC,EAA0C;AACxC,ADqBL,AG5BD,ADyBE,MAAM,IDlBE,CCkBG,GAAI,GAAG,CAAC,CDlBF,CCkBF,CAAe,CDlBV,ICkBL,CAAqB,GDlBR,CAAC,CAAD,CAAR,CAAY,ECkBjB,EDlBX,ACkB2C,GAAG,CAAC,IAApC,CAAf;AACA,EAAA,WAAW,CAAC,KAAD,EAAQ,KAAR,CAAX;ADlBI,ADsBN,AG7BA,AD0BC,SFGQ,CCtBC,SAAS,EDsBnB,CAAsB,ECtBE,QDsBxB,CCtBM,CDsBkC,CCtBL,MDsBnC,EAAuD,aAAvD,EAAiF;ACrBzE,ADsBN,EAAA,MCtBM,IDsBI,CCtBC,ADsBA,CCtBC,SAAD,EAAa,ADsBxB,CAAwB,OCtBQ,ADsBhC,CCtBiC,CAAD,ADsBC,CCtBT,CAAsB,QAAnC,EAAuD,CDsBlE,OCtB0E,CAAC,CAAD,CAAR,CAAY,GAAnE,CAAL;AACD,ADsBN,AGQD,ADXA,SAAS,QAAT,CAAkB,QAAlB,EAAmC,KAAnC,EAA+C;ADlB1C,ACmBH,MAAI,CAAJ;ADlBC,ADsBH,AGOA,ADXE,MAAe,GFIR,AEJW,GAAG,QFIvB,AEJ+B,CFIV,AEJW,IFIhC,AEJE,EFI+B,KAAjC,EAA4C;ACrB3C,ADsBC,AELA,EFKA,IAAI,AEL6C,CFK5C,EEL+C,GAAG,KAAK,CFK5D,AEL6D,CFK5C,GELjB,EFKA;AACD,AELC,MAAM,OAAO,GAAG,GAAG,CAAC,IAApB;ADZI,ACYJ,MAA0B,GDZZ,CAAV,ACY0B,CDZd,ECYiB,CDZ7B,EAAsB,ACYU,CDZhC,ACYiC,EDZF,CAA/B,CCYJ,CDZ0C;AAC1C,ADkBF,MClBM,GDkBG,CClBC,GAAc,EAAtB,KDkBF,CAAqB,IAArB,EAAiC,KAAjC,EAA4C;AClB1C,ADmBA,AEPA,EFOA,ICnB0B,ADmBtB,AEPA,CFOC,EEPE,CAAC,EAAJ,EDZJ,GCYe,CFOf,CAAiB,CEPC,CAAC,EAAf,CFOJ,GEP0B,OAAe,CAAC,MAAhB,KAA4B,IAAY,CAAC,MAAnE,EAA2E;ADZ3E,ADoBD,AEPG,IAAA,EDbuC,IAAzC,KCaa,CAAE,GAAG,CAAC,EAAJ,CAAe,KAAf,CAAqB,SAArB,EAAgC,IAAhC,CAAF,EAAyC,KAAzC,CAAX;ADbF,ACcE,MDdkD,CAApD;ADsBF,AGvCA,ADgCG,SFOM,AGvCA,OAAT,CAAiB,CAAjB,CHuCA,CAAoB,AGvCG,IHuCvB,EAA8B;ACrB5B,ADsBA,AGxCkC,MFkB9B,CAAC,EDsBE,AGxCkC,CAAC,EFkBhC,CDsBC,CAAC,CGxCmC,MFkB/C,EAAqB,CDsBrB,AGxCkC;AFmBhC,ADsBH,AGzC4D,ADiC3D,IDdE,GCcG,CDdC,ACcA,GDdG,ACcA,CDdP,ACcF,EAAY,CAAC,GAAI,IAAY,CAAC,MAA9B,EAAsC,EAAE,CAAxC,EAA2C;AACzC,QAAK,OAAe,CAAC,CAAD,CAAf,KAAwB,IAAY,CAAC,CAAD,CAAzC,EAA8C;ADd9C,ADuBJ,AG1CA,ADkCM,MAAA,EDfE,CDuBC,AG1CA,CFmBC,CAAC,GEnBX,CAAe,CFmBP,AEnBR,CFmBiB,ACeA,CDfT,AEnBa,ADkCF,CDff,CDuBJ,CCvBqB,ADuBA,AERC,CAAC,EAAJ,CFQnB,AERkC,EFQH,GERZ,CAAqB,SAArB,EAAgC,IAAhC,CAAF,EAAyC,KAAzC,CAAX;ADfiB,ADwBrB,AG3CgC,ADmC5B,MDhBiB,GDwBd,AG3CgC,CAAC,GH2C7B,CCxBkB,ADwBjB,CG3CiC,EFmBb,CAAX,MEnBW,CH2ChC;ACxBoC,ADyBrC,AG5C0D,ADoCtD,KDjBD,MACK,IAAI,EAAE,CAAC,SAAH,CAAa,CAAb,CAAJ,EAAqB;AAAE,ACiB7B,MDjB6B,IAAI,GAAG,CAAP;AAAW,AD0B3C,AG1CA,IAAM,CFgBG,ID0BA,ECzBA,EEjBM,EFiBF,CAAC,ADyBd,AG1CkB,CH0CD,GCzBC,ADyBlB,CCzBmB,CAAC,ADyBS,GCzBpB,EAAgB,SEjBD,EAAN,EAAU,EAAV,EAAc,EAAd,EAAkB,SAAlB,EAA6B,SAA7B,CAAlB;AFiB2B,AD0BzB,AETA,EAAA,IDjByB,GD0BlB,GAAG,CAAC,AETA,CDjBsB,ACiBrB,GDjBwB,CAAC,CAAD,CAAX,AD0BzB,EETW,EAAW,KAAX,CAAX;ADjB0C,AD2B3C,AG1CD,ADiCC,SCjCQ,SAAT,CAAmB,MAAnB,EAAkC,MAAlC,EAA+C;AFgB5C,AEfD,GFUA,MAKO,AEfA,IFeI,CAAC,CEfC,CAAC,GFeG,AEfV,KAAe,IFef,EAAqB,AEfA,CAAC,GAAtB,IAA6B,MAAM,CAAC,GAAP,KAAe,MAAM,CAAC,GAA1D;AFgBE,AD2BJ,AG1CC,ADiCM,IAAM,IDlBL,CD2BC,AETS,CDlBR,CAAC,CCkBU,IDlBb,CAAS,CAAT,CAAJ,EAAiB,ACkBS,EFS9B,CAAwB,EETH,CAAe,CFSpC,EAAoC,AETf,EAA4B,EFSjD,CETqB,CFSkC,CETK,EAAvC,EAAiD,IAAjD,EAA2D;ADlBzD,AD4BrB,AETA,EFSA,IC5BqB,AD4BjB,AETA,CFSC,GETG,IDnBqB,CCmBhB,EDnBmB,CAAX,AD4BrB,GAAmB,GETnB,CFSA,CETwB;ADnBY,AD6BrC,AG1CD,ADiCI,IAAA,CDpBA,GCoBI,CCjCC,EFcA,ACmBE,EAAP,EDnBS,CEdb,CFce,AEdE,CFcD,IEdhB,EAA2B,GFcd,CAAa,CAAb,CAAJ,EAAqB;AAAE,AEb9B,ADiCE,IAAA,EDpB4B,ACoB1B,GCjCG,ADiCA,CDpB2B,ECoBhC,CDpBmC,CAAP,AEblB,CAAC,GAAN,KAAc,SAArB;AFayC,AD8B3C,AG1CC,ADiCG,IAAA,CDrBK,ECqBF,EFSE,CETC,CDpBD,IAAI,CAAC,GCoBV,CDpBc,CAAC,CAAC,CD6BpB,CAAwB,CC7Bf,EAAgB,CD6BzB,EAAkC;AC7BP,AD8BzB,AETC,MDrBwB,GD8BlB,IAAI,CC9BsB,AD8BrB,GC9BwB,CAAC,CAAD,CAAX,KD8BzB;AC9B0C,AD+B3C,AGlCD,KFGS,IEHA,EFIA,eEJT,CAA2B,QAA3B,EAAmD,QAAnD,EAAqE,MAArE,EAAmF;AFIxE,AEHT,ADwBA,MDrBS,AEHL,CAAJ,EDwBO,CDrBM,GAAG,CAAP,KCqBA,GAAF,EAAO;ADrBM,ADgCtB,AGnCE,ADyBE,IAAA,ECzBa,CDyBV,EFUE,AGnCW,ADyBX,GCzB6B,ADwBtB,ECxBd,IHmCF,CAAmB,IAAnB,EAA6B;AC/B1B,ADgCD,AGpCA,AD0BE,IAAA,EC1BsC,ED0BlC,CFUC,AGpCP,CD0BQ,GFUG,CAAC,QAAL,KAAkB,CAAzB;AACD,AGrCC,AD0BS,MC1BqD,AD0BrD,EC1BT,ED0Ba,EAAA,IAAL;ADrBR,ACqBe,MDrBX,ACqBW,QDrBH,ACqBW,EAAA,GDrBN,SAAjB,EAA4B;AAC1B,ADiCJ,AGtCE,ADyBQ,KAFM,ECvBT,CAAC,CFKC,ADiCA,CCjCC,CELC,EFKE,CAAT,CDiCJ,CCjCgB,ADiCA,CCjCC,EELf,CFKkB,ADiCpB,CGtCqB,CHsCK,AGtCJ,IAAI,EFKE,CAAC,GEL3B,EAAgC,CFK9B,CELgC,CFKC,AELnC,EFKqC,AELA,CFKnC,EAAsC;AACpC,ADiCJ,AGtCE,ADyBA,ICzBA,ADyBA,ECzBE,ADyBA,E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","file":"04-debug-patchVnode.b4335a58.js","sourceRoot":"..","sourcesContent":["import {Hooks} from './hooks';\nimport {AttachData} from './helpers/attachto'\nimport {VNodeStyle} from './modules/style'\nimport {On} from './modules/eventlisteners'\nimport {Attrs} from './modules/attributes'\nimport {Classes} from './modules/class'\nimport {Props} from './modules/props'\nimport {Dataset} from './modules/dataset'\nimport {Hero} from './modules/hero'\n\nexport type Key = string | number;\n\n// interface 接口，\n// 目的：约束实现这个接口的所有对象都拥有相同的属性\nexport interface VNode {\n  // 选择器\n  sel: string | undefined;\n  // 模块，节点数据：属性/样式/事件等\n  data: VNodeData | undefined;\n  // 子节点，和 text 只能互斥\n  children: Array<VNode | string> | undefined;\n  // 记录 vnode 对应的真实 DOM\n  elm: Node | undefined;\n  // 节点中的内容，和 children 只能互斥\n  text: string | undefined;\n  // 优化用\n  key: Key | undefined;\n}\n\nexport interface VNodeData {\n  props?: Props;\n  attrs?: Attrs;\n  class?: Classes;\n  style?: VNodeStyle;\n  dataset?: Dataset;\n  on?: On;\n  hero?: Hero;\n  attachData?: AttachData;\n  hook?: Hooks;\n  key?: Key;\n  ns?: string; // for SVGs\n  fn?: () => VNode; // for thunks\n  args?: Array<any>; // for thunks\n  [key: string]: any; // for any other 3rd party module\n}\n\nexport function vnode(sel: string | undefined,\n                      data: any | undefined,\n                      children: Array<VNode | string> | undefined,\n                      text: string | undefined,\n                      elm: Element | Text | undefined): VNode {\n  let key = data === undefined ? undefined : data.key;\n  return {sel, data, children, text, elm, key};\n}\n\nexport default vnode;\n","export const array = Array.isArray;\nexport function primitive(s: any): s is (string | number) {\n  return typeof s === 'string' || typeof s === 'number';\n}\n","export interface DOMAPI {\n  createElement: (tagName: any) => HTMLElement;\n  createElementNS: (namespaceURI: string, qualifiedName: string) => Element;\n  createTextNode: (text: string) => Text;\n  createComment: (text: string) => Comment;\n  insertBefore: (parentNode: Node, newNode: Node, referenceNode: Node | null) => void;\n  removeChild: (node: Node, child: Node) => void;\n  appendChild: (node: Node, child: Node) => void;\n  parentNode: (node: Node) => Node;\n  nextSibling: (node: Node) => Node;\n  tagName: (elm: Element) => string;\n  setTextContent: (node: Node, text: string | null) => void;\n  getTextContent: (node: Node) => string | null;\n  isElement: (node: Node) => node is Element;\n  isText: (node: Node) => node is Text;\n  isComment: (node: Node) => node is Comment;\n}\n\nfunction createElement(tagName: any): HTMLElement {\n  return document.createElement(tagName);\n}\n\nfunction createElementNS(namespaceURI: string, qualifiedName: string): Element {\n  return document.createElementNS(namespaceURI, qualifiedName);\n}\n\nfunction createTextNode(text: string): Text {\n  return document.createTextNode(text);\n}\n\nfunction createComment(text: string): Comment {\n  return document.createComment(text);\n}\n\nfunction insertBefore(parentNode: Node, newNode: Node, referenceNode: Node | null): void {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild(node: Node, child: Node): void {\n  node.removeChild(child);\n}\n\nfunction appendChild(node: Node, child: Node): void {\n  node.appendChild(child);\n}\n\nfunction parentNode(node: Node): Node | null {\n  return node.parentNode;\n}\n\nfunction nextSibling(node: Node): Node | null {\n  return node.nextSibling;\n}\n\nfunction tagName(elm: Element): string {\n  return elm.tagName;\n}\n\nfunction setTextContent(node: Node, text: string | null): void {\n  node.textContent = text;\n}\n\nfunction getTextContent(node: Node): string | null {\n  return node.textContent;\n}\n\nfunction isElement(node: Node): node is Element {\n  return node.nodeType === 1;\n}\n\nfunction isText(node: Node): node is Text {\n  return node.nodeType === 3;\n}\n\nfunction isComment(node: Node): node is Comment {\n  return node.nodeType === 8;\n}\n\nexport const htmlDomApi = {\n  createElement,\n  createElementNS,\n  createTextNode,\n  createComment,\n  insertBefore,\n  removeChild,\n  appendChild,\n  parentNode,\n  nextSibling,\n  tagName,\n  setTextContent,\n  getTextContent,\n  isElement,\n  isText,\n  isComment,\n} as DOMAPI;\n\nexport default htmlDomApi;\n","import {vnode, VNode, VNodeData} from './vnode';\nexport type VNodes = Array<VNode>;\nexport type VNodeChildElement = VNode | string | number | undefined | null;\nexport type ArrayOrElement<T> = T | T[];\nexport type VNodeChildren = ArrayOrElement<VNodeChildElement>\nimport * as is from './is';\n\nfunction addNS(data: any, children: VNodes | undefined, sel: string | undefined): void {\n  data.ns = 'http://www.w3.org/2000/svg';\n  if (sel !== 'foreignObject' && children !== undefined) {\n    for (let i = 0; i < children.length; ++i) {\n      let childData = children[i].data;\n      if (childData !== undefined) {\n        addNS(childData, (children[i] as VNode).children as VNodes, children[i].sel);\n      }\n    }\n  }\n}\n\n// h 函数的重载\nexport function h(sel: string): VNode;\nexport function h(sel: string, data: VNodeData): VNode;\nexport function h(sel: string, children: VNodeChildren): VNode;\nexport function h(sel: string, data: VNodeData, children: VNodeChildren): VNode;\nexport function h(sel: any, b?: any, c?: any): VNode {\n  var data: VNodeData = {}, children: any, text: any, i: number;\n  // 处理参数，实现重载的机制\n  if (c !== undefined) {\n    // 处理三个参数的情况\n    // sel、data、children/text\n    data = b;\n    if (is.array(c)) { children = c; }\n    // 如果 c 是字符串或者数字\n    else if (is.primitive(c)) { text = c; }\n    // 如果 c 是VNode\n    else if (c && c.sel) { children = [c]; }\n  } else if (b !== undefined) {\n    // 处理两个参数的情况\n    // 如果 b 是数组\n    if (is.array(b)) { children = b; }\n    // 如果 b 是字符串或者数字\n    else if (is.primitive(b)) { text = b; }\n    // 如果 b 是VNode\n    else if (b && b.sel) { children = [b]; }\n    else { data = b; }\n  }\n  if (children !== undefined) {\n    // 处理 children 中的原始值（string/number）\n    for (i = 0; i < children.length; ++i) {\n      // 如果 child 是 string/number，创建文本节点\n      if (is.primitive(children[i])) children[i] = vnode(undefined, undefined, undefined, children[i], undefined);\n    }\n  }\n  if (\n    sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&\n    (sel.length === 3 || sel[3] === '.' || sel[3] === '#')\n  ) {\n    // 如果是 svg，添加命名空间\n    addNS(data, children, sel);\n  }\n  // 返回 VNode\n  return vnode(sel, data, children, text, undefined);\n};\n// 导出模块\nexport default h;\n","import {VNode, VNodeData} from './vnode';\nimport {h} from './h';\n\nexport interface ThunkData extends VNodeData {\n  fn: () => VNode;\n  args: Array<any>;\n}\n\nexport interface Thunk extends VNode {\n  data: ThunkData;\n}\n\nexport interface ThunkFn {\n  (sel: string, fn: Function, args: Array<any>): Thunk;\n  (sel: string, key: any, fn: Function, args: Array<any>): Thunk;\n}\n\nfunction copyToThunk(vnode: VNode, thunk: VNode): void {\n  thunk.elm = vnode.elm;\n  (vnode.data as VNodeData).fn = (thunk.data as VNodeData).fn;\n  (vnode.data as VNodeData).args = (thunk.data as VNodeData).args;\n  thunk.data = vnode.data;\n  thunk.children = vnode.children;\n  thunk.text = vnode.text;\n  thunk.elm = vnode.elm;\n}\n\nfunction init(thunk: VNode): void {\n  const cur = thunk.data as VNodeData;\n  const vnode = (cur.fn as any).apply(undefined, cur.args);\n  copyToThunk(vnode, thunk);\n}\n\nfunction prepatch(oldVnode: VNode, thunk: VNode): void {\n  let i: number, old = oldVnode.data as VNodeData, cur = thunk.data as VNodeData;\n  const oldArgs = old.args, args = cur.args;\n  if (old.fn !== cur.fn || (oldArgs as any).length !== (args as any).length) {\n    copyToThunk((cur.fn as any).apply(undefined, args), thunk);\n    return;\n  }\n  for (i = 0; i < (args as any).length; ++i) {\n    if ((oldArgs as any)[i] !== (args as any)[i]) {\n      copyToThunk((cur.fn as any).apply(undefined, args), thunk);\n      return;\n    }\n  }\n  copyToThunk(oldVnode, thunk);\n}\n\nexport const thunk = function thunk(sel: string, key?: any, fn?: any, args?: any): VNode {\n  if (args === undefined) {\n    args = fn;\n    fn = key;\n    key = undefined;\n  }\n  return h(sel, {\n    key: key,\n    hook: {init, prepatch},\n    fn: fn,\n    args: args\n  });\n} as ThunkFn;\n\nexport default thunk;","/* global module, document, Node */\n// 导入 Module 接口，定义了钩子函数的形式\nimport {Module} from './modules/module';\nimport {Hooks} from './hooks';\nimport vnode, {VNode, VNodeData, Key} from './vnode';\nimport * as is from './is';\nimport htmlDomApi, {DOMAPI} from './htmldomapi';\n\nfunction isUndef(s: any): boolean { return s === undefined; }\nfunction isDef(s: any): boolean { return s !== undefined; }\n\ntype VNodeQueue = Array<VNode>;\n\nconst emptyNode = vnode('', {}, [], undefined, undefined);\n\nfunction sameVnode(vnode1: VNode, vnode2: VNode): boolean {\n  return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\n\nfunction isVnode(vnode: any): vnode is VNode {\n  return vnode.sel !== undefined;\n}\n\ntype KeyToIndexMap = {[key: string]: number};\n\ntype ArraysOf<T> = {\n  [K in keyof T]: (T[K])[];\n}\n\ntype ModuleHooks = ArraysOf<Module>;\n\nfunction createKeyToOldIdx(children: Array<VNode>, beginIdx: number, endIdx: number): KeyToIndexMap {\n  let i: number, map: KeyToIndexMap = {}, key: Key | undefined, ch;\n  for (i = beginIdx; i <= endIdx; ++i) {\n    ch = children[i];\n    if (ch != null) {\n      key = ch.key;\n      if (key !== undefined) map[key] = i;\n    }\n  }\n  return map;\n}\n\n// 存储了钩子函数的名字\nconst hooks: (keyof Module)[] = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];\n\nexport {h} from './h';\nexport {thunk} from './thunk';\n\n// domAPI 执行DOM操作\nexport function init(modules: Array<Partial<Module>>, domApi?: DOMAPI) {\n  let i: number, j: number, cbs = ({} as ModuleHooks);\n\n  // 初始化转换虚拟节点的 api\n  const api: DOMAPI = domApi !== undefined ? domApi : htmlDomApi;\n\n  // 把传入的所有模块的钩子函数，统一存储到 cbs 对象中\n  // 最终构建的 cbs 对象的形式 cbs = { create: [], update: [], ... }\n  for (i = 0; i < hooks.length; ++i) {\n    // cbs.create = [], cbs.update = [], ...\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      // modules 传入的模块数组\n      // 获取模块中的 hook 函数\n      // hook = modules[0][create]...\n      const hook = modules[j][hooks[i]];\n      if (hook !== undefined) {\n        // 把获取到的hook函数放入到 cbs 对应的钩子函数数组中\n        (cbs[hooks[i]] as Array<any>).push(hook);\n      }\n    }\n  }\n\n  function emptyNodeAt(elm: Element) {\n    const id = elm.id ? '#' + elm.id : '';\n    const c = elm.className ? '.' + elm.className.split(' ').join('.') : '';\n    return vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);\n  }\n\n  function createRmCb(childElm: Node, listeners: number) {\n    // 返回删除元素的回调函数\n    return function rmCb() {\n      if (--listeners === 0) {\n        const parent = api.parentNode(childElm);\n        api.removeChild(parent, childElm);\n      }\n    };\n  }\n\n  // 作用：把 VNode 转换成对应的 DOM 元素，但是并不会把 DOM 渲染到页面中\n  function createElm(vnode: VNode, insertedVnodeQueue: VNodeQueue): Node {\n    let i: any, data = vnode.data;\n    if (data !== undefined) {\n      // 执行用户设置的 init 的钩子函数\n      if (isDef(i = data.hook) && isDef(i = i.init)) {\n        i(vnode);\n        data = vnode.data;\n      }\n    }\n    // 把 vnode 转换成真实 DOM 对象（没有渲染到页面）\n    let children = vnode.children, sel = vnode.sel;\n    if (sel === '!') {\n      // 如果选择器是!，创建注释节点\n      if (isUndef(vnode.text)) {\n        vnode.text = '';\n      }\n      vnode.elm = api.createComment(vnode.text as string);\n    } else if (sel !== undefined) {\n      // 如果选择器不为空\n      // 解析选择器\n      // Parse selector \n      const hashIdx = sel.indexOf('#');\n      const dotIdx = sel.indexOf('.', hashIdx);\n      const hash = hashIdx > 0 ? hashIdx : sel.length;\n      const dot = dotIdx > 0 ? dotIdx : sel.length;\n      const tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;\n      // data.ns 是否有命名空间\n      const elm = vnode.elm = isDef(data) && isDef(i = (data as VNodeData).ns) ? api.createElementNS(i, tag)\n                                                                               : api.createElement(tag);\n      if (hash < dot) elm.setAttribute('id', sel.slice(hash + 1, dot));\n      if (dotIdx > 0) elm.setAttribute('class', sel.slice(dot + 1).replace(/\\./g, ' '));\n      // 执行模块的 create 钩子函数\n      for (i = 0; i < cbs.create.length; ++i) cbs.create[i](emptyNode, vnode);\n      // 如果 vnode 中有子节点，创建子 vnode 对应的 DOM 元素，并追加到 DOM 树上\n      if (is.array(children)) {\n        for (i = 0; i < children.length; ++i) {\n          const ch = children[i];\n          if (ch != null) {\n            api.appendChild(elm, createElm(ch as VNode, insertedVnodeQueue));\n          }\n        }\n      } else if (is.primitive(vnode.text)) {\n      // 如果 vnode 的 text 值是 string/number，创建文本节点，并追加到 DOM 树上\n        api.appendChild(elm, api.createTextNode(vnode.text));\n      }\n      i = (vnode.data as VNodeData).hook; // Reuse variable\n      if (isDef(i)) {\n        // 执行用户传入的钩子 create\n        if (i.create) i.create(emptyNode, vnode);\n        // 把 vnode 添加到队列中，为后续执行 insert 钩子做准备\n        if (i.insert) insertedVnodeQueue.push(vnode);\n      }\n    } else {\n      // 如果选择器为空，创建文本节点\n      vnode.elm = api.createTextNode(vnode.text as string);\n    }\n    // 返回新创建的 DOM\n    return vnode.elm;\n  }\n\n  function addVnodes(parentElm: Node,\n                     before: Node | null,\n                     vnodes: Array<VNode>,\n                     startIdx: number,\n                     endIdx: number,\n                     insertedVnodeQueue: VNodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      const ch = vnodes[startIdx];\n      if (ch != null) {\n        api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);\n      }\n    }\n  }\n\n  function invokeDestroyHook(vnode: VNode) {\n    let i: any, j: number, data = vnode.data;\n    if (data !== undefined) {\n      // 获取用户设置的 destroy 钩子函数\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) i(vnode);\n      // 调用模块的 destroy 钩子函数\n      for (i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vnode);\n      // 执行子节点的 destroy 钩子函数\n      if (vnode.children !== undefined) {\n        for (j = 0; j < vnode.children.length; ++j) {\n          i = vnode.children[j];\n          if (i != null && typeof i !== \"string\") {\n            invokeDestroyHook(i);\n          }\n        }\n      }\n    }\n  }\n\n  function removeVnodes(parentElm: Node,\n                        vnodes: Array<VNode>,\n                        startIdx: number,\n                        endIdx: number): void {\n\n    for (; startIdx <= endIdx; ++startIdx) {\n      let i: any, listeners: number, rm: () => void, ch = vnodes[startIdx];\n      if (ch != null) {\n        // 如果 sel 有值\n        if (isDef(ch.sel)) {\n          // 执行 destroy 钩子函数（会执行所有子节点的 destroy 钩子函数）\n          invokeDestroyHook(ch);\n          // 防止多次删除节点\n          listeners = cbs.remove.length + 1;\n          // 创建删除的回调函数\n          rm = createRmCb(ch.elm as Node, listeners);\n          for (i = 0; i < cbs.remove.length; ++i) cbs.remove[i](ch, rm);\n          // 执行用户设置的 remove 钩子函数\n          if (isDef(i = ch.data) && isDef(i = i.hook) && isDef(i = i.remove)) {\n            i(ch, rm);\n          } else {\n            // 如果没有用户钩子函数，直接调用删除元素的方法\n            rm();\n          }\n        } else { // Text node\n          // 如果是文本节点，直接调用删除元素的方法\n          api.removeChild(parentElm, ch.elm as Node);\n        }\n      }\n    }\n  }\n\n  // VNode 的核心\n  function updateChildren(parentElm: Node,\n                          oldCh: Array<VNode>,\n                          newCh: Array<VNode>,\n                          insertedVnodeQueue: VNodeQueue) {\n    // 新老开始节点的索引\n    let oldStartIdx = 0, newStartIdx = 0;\n    // 老的结束节点的索引\n    let oldEndIdx = oldCh.length - 1;\n    // 老的开始节点\n    let oldStartVnode = oldCh[0];\n    // 老的结束节点\n    let oldEndVnode = oldCh[oldEndIdx];\n    // 新的结束节点的索引\n    let newEndIdx = newCh.length - 1;\n    // 新的开始节点\n    let newStartVnode = newCh[0];\n    // 新的结束节点\n    let newEndVnode = newCh[newEndIdx];\n    let oldKeyToIdx: any;\n    let idxInOld: number;\n    let elmToMove: VNode;\n    let before: any;\n\n    // 对比所有的新旧子节点\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      // 索引变化后,可能会把节点设置为空\n      if (oldStartVnode == null) {\n        // 节点为空移动索引\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n      } else if (oldEndVnode == null) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (newStartVnode == null) {\n        newStartVnode = newCh[++newStartIdx];\n      } else if (newEndVnode == null) {\n        newEndVnode = newCh[--newEndIdx];\n        // 比较开始和结束节点的四种情况\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        // 1. 比较老的开始节点和新的开始节点\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        // 2. 比较老的结束节点和新的结束节点\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        // 3. 比较老的开始节点和新的结束节点\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        api.insertBefore(parentElm, oldStartVnode.elm as Node, api.nextSibling(oldEndVnode.elm as Node));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        // 4. 比较老的结束节点和新的开始节点\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        api.insertBefore(parentElm, oldEndVnode.elm as Node, oldStartVnode.elm as Node);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        // 开始节点和结束节点都不相同\n        // 使用 newStartNode 的 key 在老的节点数组中找相同节点\n        // 先设置记录 key 和 index 的对象\n        if (oldKeyToIdx === undefined) {\n          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n        }\n        // 遍历 newStartVnode,从老的节点中找相同 key 的 oldVnode 的索引\n        idxInOld = oldKeyToIdx[newStartVnode.key as string];\n        // 如果是新的 vnode\n        if (isUndef(idxInOld)) { // New element\n          // 如果没找到,newStartVnode 是新节点\n          // 创建元素插入 DOM 树\n          api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm as Node);\n          // 重新给 newStartVnode 赋值,指向下一个新节点\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          // 如果找到相同 key 相同的老节点,记录到 elmToMove 遍历\n          elmToMove = oldCh[idxInOld];\n          if (elmToMove.sel !== newStartVnode.sel) {\n            // 如果新旧节点的选择器不同\n            // 创建新开始节点对应的 DOM 元素,插入到 DOM 树中\n            api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm as Node);\n          } else {\n            // 如果相同,patchVnode()\n            // 把 elmToMove 对应的 DOM 元素,移动到左边\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined as any;\n            api.insertBefore(parentElm, (elmToMove.elm as Node), oldStartVnode.elm as Node);\n          }\n          // 重新给 newStartVnode 赋值,指向下一个新节点\n          newStartVnode = newCh[++newStartIdx];\n        }\n      }\n    }\n    // 循环结束,老节点数组先遍历完成或者新节点数组先遍历完成\n    if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n      if (oldStartIdx > oldEndIdx) {\n        // 如果老节点数组先遍历完成,说明有新的节点剩余\n        // 把剩余的新节点都插入到右边\n        before = newCh[newEndIdx+1] == null ? null : newCh[newEndIdx+1].elm;\n        addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n      } else {\n        // 如果新节点数组先遍历完成,说明老节点有剩余\n        // 批量删除老节点\n        removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n      }\n    }\n  }\n\n  function patchVnode(oldVnode: VNode, vnode: VNode, insertedVnodeQueue: VNodeQueue) {\n    let i: any, hook: any;\n    // 首先执行用户设置的 prepatch 钩子函数\n    if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    const elm = vnode.elm = (oldVnode.elm as Node);\n    let oldCh = oldVnode.children;\n    let ch = vnode.children;\n    // 如果新老 vnode 相同，直接返回\n    if (oldVnode === vnode) return;\n    if (vnode.data !== undefined) {\n      // 执行模块的 update 钩子函数\n      for (i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode);\n      // 执行用户设置的 update 钩子函数\n      i = vnode.data.hook;\n      if (isDef(i) && isDef(i = i.update)) i(oldVnode, vnode);\n    }\n    // 如果 vnode.text 未定义\n    if (isUndef(vnode.text)) {\n      // 如果新老节点都有 children\n      if (isDef(oldCh) && isDef(ch)) {\n        // 使用 diff 算法对比子节点，更新子节点\n        if (oldCh !== ch) updateChildren(elm, oldCh as Array<VNode>, ch as Array<VNode>, insertedVnodeQueue);\n      } else if (isDef(ch)) {\n        // 如果新节点有 children，老节点没有 children\n        // 如果老节点有 text，清空 dom 元素的内容\n        if (isDef(oldVnode.text)) api.setTextContent(elm, '');\n        // 批量添加子节点\n        addVnodes(elm, null, ch as Array<VNode>, 0, (ch as Array<VNode>).length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        // 如果老节点有 children，新节点没有 children\n        // 批量移除子节点\n        removeVnodes(elm, oldCh as Array<VNode>, 0, (oldCh as Array<VNode>).length - 1);\n      } else if (isDef(oldVnode.text)) {\n        // 如果老节点有 text，清空 DOM　元素\n        api.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      // 如果没有设置 vnode.text\n      if (isDef(oldCh)) {\n        // 如果老节点有 children，移除\n        removeVnodes(elm, oldCh as Array<VNode>, 0, (oldCh as Array<VNode>).length - 1);\n      }\n      // 设置 DOM 元素的 textContent 为 vnode.text\n      api.setTextContent(elm, vnode.text as string);\n    }\n    // 最后执行用户设置的 postpatch 钩子函数\n    if (isDef(hook) && isDef(i = hook.postpatch)) {\n      i(oldVnode, vnode);\n    }\n  }\n\n  // init 内部返回 patch 函数，把vnode渲染成真实 dom，并返回vnode\n  // 高阶函数，在一个函数内部返回一个函数\n  return function patch(oldVnode: VNode | Element, vnode: VNode): VNode {\n    let i: number, elm: Node, parent: Node;\n    // 保存新插入节点的队列，为了触发钩子函数\n    const insertedVnodeQueue: VNodeQueue = [];\n    // 执行模块的 pre 钩子函数，pre 预处理\n    for (i = 0; i < cbs.pre.length; ++i) cbs.pre[i]();\n\n    // 如果 oldVnode 不是 VNode，创建 VNode 并设置 elm\n    if (!isVnode(oldVnode)) {\n      // 把 DOM 元素转换成空的 VNode\n      oldVnode = emptyNodeAt(oldVnode);\n    }\n\n    // 如果新旧节点是相同节点(key 和 sel 相同)\n    if (sameVnode(oldVnode, vnode)) {\n      // 找节点的差异并更新 DOM\n      patchVnode(oldVnode, vnode, insertedVnodeQueue);\n    } else {\n      // 如果新旧节点不同，vnode 创建对应的 DOM\n      // 获取当前的 DOM 元素\n      elm = oldVnode.elm as Node;\n      parent = api.parentNode(elm);\n\n      // 创建 vnode 对应的 DOM 元素，并触发 init/create 钩子函数\n      createElm(vnode, insertedVnodeQueue);\n\n      if (parent !== null) {\n        // 如果父节点不为空，把 vnode 对应的 DOM　插入到文档中\n        api.insertBefore(parent, vnode.elm as Node, api.nextSibling(elm));\n        // 移除老节点\n        removeVnodes(parent, [oldVnode], 0, 0);\n      }\n    }\n\n    // 执行用户设置的 insert 钩子函数\n    for (i = 0; i < insertedVnodeQueue.length; ++i) {\n      // insertedVnodeQueue 队列 中的 insert 钩子函数\n      (((insertedVnodeQueue[i].data as VNodeData).hook as Hooks).insert as any)(insertedVnodeQueue[i]);\n    }\n    // 执行模块的 post 钩子函数\n    for (i = 0; i < cbs.post.length; ++i) cbs.post[i]();\n    // 返回 vnode\n    return vnode;\n  };\n}\n","import { h, init } from 'snabbdom'\r\n\r\nlet patch = init([])\r\n\r\n// 首次渲染\r\nlet vnode = h('div', 'Hello World')\r\nlet app = document.querySelector('#app')\r\nlet oldVnode = patch(app, vnode)\r\n\r\n// patchVnode 的执行过程\r\nvnode = h('div', 'Hello Snabbdom')\r\npatch(oldVnode, vnode)\r\n"]}